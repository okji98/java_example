package map;

import java.util.HashMap;
import java.util.Map;

public class Library {
	private String bookID = null;
	private String name = null;
	private Map<String, String> userAndBook = new HashMap<String, String>();

	@Override
	public boolean equals(Object obj) {
		if (obj instanceof Library) {
			Library library = (Library) obj;
			return (bookID == library.bookID) && (name.equals(library.name));
		} else {
			return false;
		}
	}

	public void addBook(String bookID) {
		if (userAndBook.containsKey(bookID)) {
			System.out.println("책 ID " + bookID + "는 이미 존재합니다.");
		} else {
			this.bookID = bookID;
			userAndBook.put(bookID, null);
			System.out.println("책 ID " + bookID + "가 추가되었습니다.");
		}
	}

	public void rentalBook(String bookID, String name) {
		if (!userAndBook.containsKey(bookID)) {
			System.out.println("책 ID " + bookID + "가 존재하지 않습니다.");
		} else if (userAndBook.get(bookID) != null) {
			System.out.println("책 ID " + bookID + "는 이미 " + userAndBook.get(bookID) + "님에게 대여중입니다.");
		} else {
			userAndBook.put(bookID, name);
			System.out.println("책 ID " + bookID + "가 " + name + "님에게 대여되었습니다.");
		}
	}

	public void returnBook(String bookID) {
		if (userAndBook.get(bookID) == null) {
			userAndBook.put(bookID, null);
			System.out.println("책 ID: " + bookID + "가 " + name + "로부터 반납되었습니다.");
		}
	}

	public void allBooksPrint() {
		System.out.println("=== 책 대여 상태 ===");

		for (String key : userAndBook.keySet()) {
			if (userAndBook.get(key) != null) {
				System.out.println("책 ID: " + key + " - 대여 중 " + "(" + userAndBook.get(key) + ")");
			} else if (!userAndBook.containsKey(key)) {
				System.out.println("책 ID: " + key + "가 존재하지 않습니다.");
			} else {
				System.out.println("책 ID: " + key + " - 대여 가능");
			}
		}

	}
}
